# -*- coding: utf-8 -*-
from .._base import AsyncBase
from ..generated import {{ plugin_name.lower_snake_case }}_pb2, {{ plugin_name.lower_snake_case }}_pb2_grpc
from enum import Enum

{%- for enum in enums %}


{{ enum }}
{%- endfor %}


{%- for struct in structs %}


{{ struct }}
{%- endfor %}


class {{ plugin_name.upper_camel_case }}(AsyncBase):
    """ Generated by dcsdkgen - DronecodeSDK {{ plugin_name.upper_camel_case }} API """

    # Plugin name
    name = "{{ plugin_name.upper_camel_case }}"

    def _setup_stub(self, channel):
        """ Setups the api stub """
        self._stub = {{ plugin_name.lower_snake_case }}_pb2_grpc.{{ plugin_name.upper_camel_case }}ServiceStub(channel)

    def _extract_result(self, response):
        """ Returns the response status and description. If there is no result, it means that it always succeeds. """
        try:
            response.{{ plugin_name.lower_snake_case }}_result
        except AttributeError:
            return {{ plugin_name.upper_camel_case }}Result({{ plugin_name.upper_camel_case }}Result.Result.SUCCESS, "Success")
        else:
            return {{ plugin_name.upper_camel_case }}Result.translate_from_rpc(response.{{ plugin_name.lower_snake_case }}_result)

    {%- for method in methods -%}
    {{ '\n' + indent(method, 1) }}

    {%- endfor %}
